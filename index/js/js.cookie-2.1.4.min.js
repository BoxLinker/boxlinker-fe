/*! js-cookie v2.1.4 | MIT */

!(function(a) {
  let b = !1;
  if (
    (
      typeof define === 'function' && define.amd && (define(a), (b = !0)),
      typeof exports === 'object' && ((module.exports = a()), (b = !0)),
      !b
    )
  ) {
    let c = window.Cookies,
      d = (window.Cookies = a());
    d.noConflict = function() {
      return (window.Cookies = c), d;
    };
  }
})(() => {
  function a() {
    for (var a = 0, b = {}; a < arguments.length; a++) {
      const c = arguments[a];
      for (const d in c) b[d] = c[d];
    }
    return b;
  }
  function b(c) {
    function d(b, e, f) {
      let g;
      if (typeof document !== 'undefined') {
        if (arguments.length > 1) {
          if (
            (
              (f = a({ path: '/' }, d.defaults, f)),
              typeof f.expires === 'number'
            )
          ) {
            const h = new Date();
            h.setMilliseconds(
              h.getMilliseconds() + 864e5 * f.expires,
            ), (f.expires = h);
          }
          f.expires = f.expires ? f.expires.toUTCString() : '';
          try {
            (g = JSON.stringify(e)), /^[\{\[]/.test(g) && (e = g);
          } catch (p) {}
          (e = c.write
            ? c.write(e, b)
            : encodeURIComponent(`${e}`).replace(
                /%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g,
                decodeURIComponent,
              )), (b = encodeURIComponent(`${b}`)), (b = b.replace(
            /%(23|24|26|2B|5E|60|7C)/g,
            decodeURIComponent,
          )), (b = b.replace(/[\(\)]/g, escape));
          let i = '';
          for (const j in f)
            f[j] && ((i += `; ${j}`), !0 !== f[j] && (i += `=${f[j]}`));
          return (document.cookie = `${b}=${e}${i}`);
        }
        b || (g = {});
        for (
          let k = document.cookie ? document.cookie.split('; ') : [], l = 0;
          l < k.length;
          l++
        ) {
          let m = k[l].split('='),
            n = m.slice(1).join('=');
          n.charAt(0) === '"' && (n = n.slice(1, -1));
          try {
            const o = m[0].replace(/(%[0-9A-Z]{2})+/g, decodeURIComponent);
            if (
              (
                (n = c.read
                  ? c.read(n, o)
                  : c(n, o) ||
                    n.replace(/(%[0-9A-Z]{2})+/g, decodeURIComponent)),
                this.json
              )
            )
              try {
                n = JSON.parse(n);
              } catch (p) {}
            if (b === o) {
              g = n;
              break;
            }
            b || (g[o] = n);
          } catch (p) {}
        }
        return g;
      }
    }
    return (d.set = d), (d.get = function(a) {
      return d.call(d, a);
    }), (d.getJSON = function() {
      return d.apply({ json: !0 }, [].slice.call(arguments));
    }), (d.defaults = {}), (d.remove = function(b, c) {
      d(b, '', a(c, { expires: -1 }));
    }), (d.withConverter = b), d;
  }
  return b(() => {});
});
